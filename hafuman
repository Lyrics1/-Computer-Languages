#include<stdio.h>#include<stdlib.h>#define N 30#define M 2*N-1typedef struct { int weight; int parent,Lchild,Rchild;}hfNode,hf[M+1];void select(hf h,int n,hfNode *max1,hfNode *max2);void creathf(hf h,int n){ int weight; int m=2*n-1; int i; hfNode s1,s2; for(i=1;i<=m;i++) { scanf("%d",&weight);  if(i<=n)   h[i].weight=weight;  else h[i].weight=0;  h[i].parent=h[i].Lchild=h[i].Rchild=0; }  for(i=n+1;i<=m;i++) {  select(h,i-1,&s1,&s2);  h[i].weight=s1.weight+s2.weight;  h[i].Lchild=s1.Lchild;  h[i].Rchild=s2.Rchild;  s1.parent=s2.parent=i; }}   void select(hf *h,int n,int *min,int *min) {  int i,j;  int temp1=1,temp2;  int tip[n];    for(i=1;i<=n;i++)  {   if(h[temp]->weight>h[i]->weight)    temp1=i;  }  if(temp1>=1 && temp<n)   temp2=temp+1;  if(  for(i=1;i<n;i++)  {   if(i!=temp1)     }    void select(hf *h,int n,hfNode *max1,hfNode *max2) {  int i,temp,j,k=1;  hf *t;  t=h;  hfNode tm[3];  for(i=1;i<=n;i++)  {   for(j=i+1;j<=n;j++)   {    if(t[i].weight < t[j].weight)    {     temp=t[i];     t[i]=t[j];     t[j]=temp;    }   }  }  for(i=1;i<=n;i++)  {   if(t[i].parent!=0)   {    tm[k]=t[i];    k++;   }  }  max1=tm[1];  max2=tm[2]; } void output(hf h,int n) {  int i=1;  for(i=0;i<n;i++)   printf("%d",h[i].weight); }        int main(void) {  hf h;  int n;  scanf("%d",&h);  creathf(h,n);  output(h,n);  return 0; }                          
