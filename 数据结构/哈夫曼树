#include<stdio.h>#include<stdlib.h>#define N 30#define M 2*N-1typedef struct { int weight; int parent,Lchild,Rchild;}HfNode,hf[M+1];void creathf(hf h,int n){ int weight; int m=2*n-1; int i; hfNode s1,s2; for(i=1;i<=m;i++) { scanf("%d",&weight);  if(i<=n)   h[i]->weight=w;  else h[i]->weight=0;  h[i]->parent=h[i]->Lchild=h[i]->Rchild=0; }  for(i=n+1;i<=m;i++) {  select(h,i-1,&s1,&s2);  h[i].weight=h[s1].weight+h[s2].weight;  h[i].Lchild=s1;  h[i].Rchild=s2;  h[s1].parent=h[s2].parent=h[i]; }}      void select(h,n,*max1,*max2) {  int i,temp,k=1;  hf t=h,tm;  for(i=1;i<=n;i++)  {   for(j=i+1;j<=n;j++)   {    if(t[i]->weight < t[j]->weight)    {     temp=t[i];     t[i]=t[j];     t[j]=temp;    }   }  }  for(i=1;i<=n;i++)  {   if(t[i].parent!=0)   {    tm[k]=t[i];    k++;   }  }  max1=tm[1];  max2=tm[2]; } void output(hf h,int n) {  int i=1;  for(i=0;i<n;i++)   printf("%d",h[i].weight; }          int main() {  hf h;  int n;  scanf("%d",&h);  creat(h,n);  output(h,n); }             
